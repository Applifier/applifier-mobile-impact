{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12620\viewh16800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 Applifier Impact iOS Integration Guide\

\b0 \
1) Include the following frameworks in your project, if not already included:\
\
- AVFoundation.framework\
- StoreKit.framework\
- AdSupport.framework (if you're using Xcode 4.5 or newer)\
\
2) Add all files from the ApplifierImpact folder to your project. Add the -fno-objc-arc compiler flag to the following files:\
\
- ApplifierImpactSBJsonBase.m\
- ApplifierImpactSBJsonParser.m\
- ApplifierImpactOpenUDID.m\
\
3) In your app delegate, perform the following steps:\
\
- Import ApplifierImpact.h.\
- In 
\f1 -application:didFinishLaunchingWithOptions:
\f0 , start Impact like this:\
	\

\f1 	[[ApplifierImpact sharedInstance] startWithApplifierID:YOUR_GAME_ID_HERE];\

\f0 \
- Optionally, add the following to 
\f1 -applicationWillEnterForeground:
\f0  to refresh available campaigns when the user returns to the app from the background:\
\

\f1 	[[ApplifierImpact sharedInstance] refresh];\

\f0 \
4) Set your view controller as the delegate for Impact:\
\

\f1 	[[ApplifierImpact sharedInstance] setDelegate:self];\

\f0 \
There are two required delegate methods:\

\f1 \
	-applifierImpact:completedVideoWithRewardItemKey:\
	-viewControllerForPresentingViewControllersForImpact:\

\f0 \
More on those in step 6.\
\
5) When you want to present Impact, check that it is possible first with 
\f1 -canShowImpact
\f0 . E.g. like this:\
\

\f1 	if ([[ApplifierImpact sharedInstance] canShowImpact])\
	\{\
		UIView *adView = [[ApplifierImpact sharedInstance] impactAdView];\
		adView.frame = self.view.bounds;\
		[self.view addSubview:adView];\
	\}\

\f0 \
As you can see from the example, Impact does not present the ad view itself. It is the responsibility of the view controller to present the view. Impact will remove the view from its superview when the ad view is closed.\
\
6) When a video has finished playing, the delegate method 
\f1 -applifierImpact:completedVideoWithRewardItemKey:
\f0  is called. <<insert longer, better explanation here>>\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf0 -viewControllerForPresentingViewControllersForImpact:
\f0  is called when Impact needs a view controller so that it can present another view controller itself. Currently, this happens when SKStoreProductViewController is shown on iOS 6.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0  }